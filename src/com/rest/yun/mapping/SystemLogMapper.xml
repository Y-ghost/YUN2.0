<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.rest.yun.mapping.SystemLogMapper">
	<resultMap id="BaseResultMap" type="com.rest.yun.beans.SystemLog">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="UserId" property="userid" jdbcType="INTEGER" />
		<result column="LogContext" property="logcontext" jdbcType="VARCHAR" />
		<result column="LogType" property="logtype" jdbcType="INTEGER" />
		<result column="LogTime" property="logtime" jdbcType="TIMESTAMP" />
		<result column="logStatus" property="logstatus" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, UserId, LogContext, LogType, LogTime, logStatus
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from SystemLog
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from SystemLog
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<!-- 批量插入系统日志 -->
	<insert id="insert" parameterType="java.util.List">
	  	<![CDATA[
		  	insert into SystemLog (userId, logContext, logType, logTime, logStatus)
		    values
		]]>
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.userid}, #{item.logcontext}, #{item.logtype},
			#{item.logtime},#{item.logstatus})
		</foreach>
	</insert>
	
	<insert id="insertSelective" parameterType="com.rest.yun.beans.SystemLog">
		insert into SystemLog
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userid != null">
				UserId,
			</if>
			<if test="logcontext != null">
				LogContext,
			</if>
			<if test="logtype != null">
				LogType,
			</if>
			<if test="logtime != null">
				LogTime,
			</if>
			<if test="logStatus != null">
				logStatus,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userid != null">
				#{userid,jdbcType=INTEGER},
			</if>
			<if test="logcontext != null">
				#{logcontext,jdbcType=VARCHAR},
			</if>
			<if test="logtype != null">
				#{logtype,jdbcType=INTEGER},
			</if>
			<if test="logtime != null">
				#{logtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logStatus != null">
				#{logstatus,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.rest.yun.beans.SystemLog">
		update SystemLog
		<set>
			<if test="userid != null">
				UserId = #{userid,jdbcType=INTEGER},
			</if>
			<if test="logcontext != null">
				LogContext = #{logcontext,jdbcType=VARCHAR},
			</if>
			<if test="logtype != null">
				LogType = #{logtype,jdbcType=INTEGER},
			</if>
			<if test="logtime != null">
				LogTime = #{logtime,jdbcType=TIMESTAMP},
			</if>
			<if test="logStatus != null">
				logStatus = #{logstatus,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.rest.yun.beans.SystemLog">
		update SystemLog
		set UserId = #{userid,jdbcType=INTEGER},
		LogContext = #{logcontext,jdbcType=VARCHAR},
		LogType = #{logtype,jdbcType=INTEGER},
		LogTime = #{logtime,jdbcType=TIMESTAMP},
		logStatus = #{logstatus,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<update id="updateStatusByPrimaryKey" >
		update SystemLog
		set logStatus = #{logstatus,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	
	<!-- Select system log by some parameters -->
  <select id="selectSystemLogForListBy" parameterType="map" resultMap="BaseResultMap">
	
	 select <include refid="Base_Column_List" /> from SystemLog
	 
	 <where>
	 	<if test="logType !=null and logType != ''">
    		logType = #{LogType}
     	</if>  
	 </where>
	 order by 
	 <choose>
	 	<when test="sortField != null and sortField != ''">
	 		${sortField}
	 	</when>
	 	<otherwise>
	 		LogTime
	 	</otherwise>
	 </choose>
	 
	 <choose>
	 	<when test="sortDirection != null and sortDirection != ''">
	 		${sortDirection}
	 	</when>
	 	<otherwise>
	 		desc
	 	</otherwise>
	 </choose>
	</select>
</mapper>